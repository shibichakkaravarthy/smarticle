"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var propChecker_1 = require("../utils/propChecker");
var Container_1 = require("./Container");
var PropTypes = require("prop-types");
var propsUpdater_1 = require("../utils/propsUpdater");
var YogaComponent_1 = require("./YogaComponent");
var index_1 = require("../backends/index");
exports.default = (function (p) {
    var propTypes = {
        style: PropTypes.object,
        onPress: PropTypes.func,
        title: PropTypes.string
    };
    var defaultProps = {
        style: {},
        onPress: function () { },
        title: "Button"
    };
    var ButtonElement = index_1.getBackend()["ButtonElement"];
    var element = new ButtonElement();
    var props = __assign({}, p);
    props = propChecker_1.default(props, propTypes, defaultProps, "TextInput");
    var yogaProps = YogaComponent_1.YogaComponent(element, undefined, true);
    var handlers = {
        onPress: props.onPress
    };
    element.buttonReleasedEvent(function () {
        handlers.onPress();
    });
    var containerProps = Container_1.Container(function (child) {
        child.element.setParent(element);
        if (child.node) {
            yogaProps.node.insertChild(child.node, yogaProps.node.getChildCount());
        }
    }, function (child) {
        child.element.del();
        if (child.node) {
            yogaProps.node.removeChild(child.node);
        }
    }, function (child, i) {
        child.element.setParent(element);
        if (child.node) {
            yogaProps.node.insertChild(child.node, i);
        }
    });
    var updateProps = propsUpdater_1.default([handlers, "onPress"], {
        style: function (style) {
            element.setStyleSheet(style);
            yogaProps.applyYogaStyle(style);
        },
        title: function (title) {
            element.setText(title);
        }
    });
    updateProps(props);
    return __assign(__assign(__assign({}, containerProps), yogaProps), { element: element,
        updateProps: updateProps });
});
