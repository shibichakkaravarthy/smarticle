"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var convertStyleSheet_1 = require("../utils/convertStyleSheet");
exports.TextFuncs = function (upText, styleProp) {
    var children = [];
    var text = [""];
    var updateText = function () {
        var childText = [];
        for (var i = 0; i < children.length; i++) {
            childText.push(children[i].text);
        }
        text[0] = "<span style=\"" + convertStyleSheet_1.default(styleProp) + "\">" + childText.join("") + "</span>";
        upText(text[0]);
    };
    var appendChild = function (child) {
        if (child.type != "text" && child.type !== "fullText") {
            throw new Error("Can't add a child to Text that isn't a string or Text");
        }
        children.push(child);
        updateText();
    };
    var insertChild = function (child, beforeChild) {
        if (child.type !== "text" && child.type !== "fullText") {
            throw new Error("Can't add a child to Text that isn't a string or Text");
        }
        if (!children.includes(beforeChild)) {
            throw new Error("Relative element does not exist");
        }
        var i = children.indexOf(beforeChild);
        children.splice(i, 0, child);
        updateText();
    };
    var removeChild = function (child) {
        if (!children.includes(child)) {
            throw new Error("Can't remove a child that's not added");
        }
        var i = children.indexOf(child);
        children.splice(i, 1);
        updateText();
    };
    return {
        appendChild: appendChild,
        insertChild: insertChild,
        removeChild: removeChild,
        children: children,
        updateText: updateText,
        text: text
    };
};
