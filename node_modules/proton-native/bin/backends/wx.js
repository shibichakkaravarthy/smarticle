"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var wx = require("node-wx-napi");
var Color = require("color");
function desktopSize() {
    return wx.desktopSize();
}
exports.desktopSize = desktopSize;
var BaseElement = /** @class */ (function () {
    function BaseElement() {
    }
    BaseElement.prototype.makeRecords = function (funcs) {
        var _this = this;
        var out = {
            FAKE: true
        };
        var _loop_1 = function (func) {
            out[func] = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return _this.records.push({
                    f: function () {
                        var _a;
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            args[_i] = arguments[_i];
                        }
                        return (_a = _this.element)[func].apply(_a, args);
                    },
                    a: args
                });
            };
        };
        for (var _i = 0, funcs_1 = funcs; _i < funcs_1.length; _i++) {
            var func = funcs_1[_i];
            _loop_1(func);
        }
        return out;
    };
    BaseElement.prototype.applyRecords = function () {
        var _a;
        for (var i = 0; i < this.records.length; i++) {
            (_a = this.records[i]).f.apply(_a, this.records[i].a);
        }
    };
    BaseElement.prototype.checkFakeParent = function (obj) {
        var _this = this;
        if (obj.element.FAKE) {
            obj.records.push({
                f: function () {
                    var _a;
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    return (_a = _this).setParent.apply(_a, args);
                },
                a: [obj]
            });
            return true;
        }
        return false;
    };
    BaseElement.prototype.mousePressEvent = function (func) {
        //noop
        console.warn("MousePressEvent noop");
        //this.element.mousePressEvent(func);
    };
    BaseElement.prototype.mouseReleaseEvent = function (func) {
        //noop
        console.warn("MouseReleaseEvent noop");
        //this.element.mouseReleaseEvent(func);
    };
    BaseElement.prototype.setStyleSheet = function (obj) {
        if ("backgroundColor" in obj) {
            var color = Color(obj.backgroundColor);
            this.element.SetBackgroundColour(color.rgb().red(), color.rgb().green(), color.rgb().blue());
        }
        //this.element.setStyleSheet(obj);
    };
    //   del() {
    //     this.element.del();
    //   }
    BaseElement.prototype.resize = function (width, height) {
        this.element.SetSize(width, height);
    };
    BaseElement.prototype.move = function (left, top) {
        this.element.SetLoc(left, top);
    };
    BaseElement.prototype.minSize = function () {
        return this.element.GetBestSize();
    };
    BaseElement.prototype.show = function () {
        this.element.Show(true);
    };
    BaseElement.prototype.close = function () {
        this.element.Close();
    };
    BaseElement.prototype.width = function () {
        return this.element.GetSize().w;
    };
    BaseElement.prototype.height = function () {
        return this.element.GetSize().h;
    };
    return BaseElement;
}());
exports.BaseElement = BaseElement;
// export class ImageElement extends BaseElement {
//   pixElement: any;
//   constructor() {
//     super();
//     this.element = new qt.QLabel();
//     this.element.setScaledContents(false);
//     this.pixElement = new qt.QPixmap();
//   }
//   setFromData(data: Buffer) {
//     this.pixElement.loadFromData(data);
//     this.element.setPixmap(this.pixElement);
//   }
//   setFromUri(uri: string) {
//     this.pixElement.load(uri);
//     this.element.setPixmap(this.pixElement);
//   }
//   scaleImage(
//     width: number,
//     height: number,
//     mode: "cover" | "contain" | "stretch" | "center" | "repeat"
//   ) {
//     this.element.setAlignment(
//       qt.Alignment.AlignLeft | qt.Alignment.AlignVCenter
//     );
//     if (mode == "cover") {
//       this.pixElement.scaled(
//         width,
//         height,
//         qt.AspectRatioMode.KeepAspectRatioByExpanding
//       );
//     } else if (mode == "contain") {
//       this.pixElement.scaled(width, height, qt.AspectRatioMode.KeepAspectRatio);
//     } else if (mode == "stretch") {
//       this.pixElement.scaled(
//         width,
//         height,
//         qt.AspectRatioMode.IgnoreAspectRatio
//       );
//     } else if (mode == "center") {
//       this.element.setAlignment(qt.Alignment.AlignCenter);
//       this.pixElement.scaled(width, height, qt.AspectRatioMode.KeepAspectRatio);
//     } else if (mode == "repeat") {
//       this.pixElement.scaledTile(width, height);
//     }
//     this.element.setPixmap(this.pixElement);
//     this.element.show();
//     this.element.adjustSize();
//   }
//   isNull(): boolean {
//     return this.pixElement.isNull();
//   }
// }
var WindowElement = /** @class */ (function (_super) {
    __extends(WindowElement, _super);
    function WindowElement() {
        var _this = _super.call(this) || this;
        _this.element = new wx.WxFrame();
        return _this;
    }
    WindowElement.prototype.resizeEvent = function (func) {
        this.element.OnResize(func);
    };
    WindowElement.prototype.getClosed = function () {
        return this.element.getClosed();
    };
    return WindowElement;
}(BaseElement));
exports.WindowElement = WindowElement;
var ViewElement = /** @class */ (function (_super) {
    __extends(ViewElement, _super);
    function ViewElement() {
        var _this = _super.call(this) || this;
        _this.records = [];
        _this.element = _this.makeRecords([
            "Show",
            "SetSize",
            "GetSize",
            "SetLoc",
            "SetBackgroundColour"
        ]);
        return _this;
    }
    ViewElement.prototype.setParent = function (obj) {
        if (!this.checkFakeParent(obj)) {
            this.element = new wx.WxPanel(obj.element);
            this.applyRecords();
        }
    };
    return ViewElement;
}(BaseElement));
exports.ViewElement = ViewElement;
// export class PickerElement extends BaseElement {
//   constructor() {
//     super();
//     this.element = new qt.QComboBox();
//   }
//   activatedEvent(func: (text: string) => void) {
//     this.element.activatedEvent(func);
//   }
//   addItem(label: string) {
//     this.element.addItem(label);
//   }
//   removeItem(index: number) {
//     this.element.removeItem(index);
//   }
//   insertItem(index: number, label: string) {
//     this.element.insertItem(index, label);
//   }
//   setCurrentText(label: string) {
//     this.element.setCurrentText(label);
//   }
//   currentIndex(): number {
//     return this.element.currentIndex();
//   }
// }
var AppElement = /** @class */ (function () {
    function AppElement() {
        this.element = new wx.WxApp();
    }
    AppElement.prototype.runLoop = function () {
        this.element.loop();
    };
    return AppElement;
}());
exports.AppElement = AppElement;
// export class TextElement extends BaseElement {
//   constructor() {
//     super();
//     this.element = new qt.QLabel();
//   }
//   setText(text: string) {
//     this.element.setText(text);
//   }
// }
// export class TextInputElement extends BaseElement {
//   constructor(multi: boolean) {
//     super();
//     this.element = multi ? new qt.QPlainTextEdit() : new qt.QLineEdit();
//   }
//   textChangedEvent(func: (newText: string) => void) {
//     this.element.textChangedEvent(func);
//   }
//   setText(text: string) {
//     this.element.setText(text);
//   }
// }
var ButtonElement = /** @class */ (function (_super) {
    __extends(ButtonElement, _super);
    function ButtonElement() {
        var _this = _super.call(this) || this;
        _this.records = [];
        _this.element = _this.makeRecords([
            "Show",
            "SetSize",
            "GetSize",
            "SetLoc",
            "SetBackgroundColour",
            "SetLabel",
            "OnPress"
        ]);
        return _this;
    }
    ButtonElement.prototype.setParent = function (obj) {
        if (!this.checkFakeParent(obj)) {
            this.element = new wx.WxButton(obj.element);
            this.applyRecords();
        }
    };
    ButtonElement.prototype.buttonReleasedEvent = function (func) {
        this.element.OnPress(func);
    };
    ButtonElement.prototype.setText = function (text) {
        this.element.SetLabel(text);
    };
    return ButtonElement;
}(BaseElement));
exports.ButtonElement = ButtonElement;
