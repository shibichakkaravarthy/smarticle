"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var qt = require("node-qt-napi");
var convertStyleSheet_1 = require("../utils/convertStyleSheet");
function desktopSize() {
    return qt.desktopSize();
}
exports.desktopSize = desktopSize;
var BaseElement = /** @class */ (function () {
    function BaseElement() {
    }
    BaseElement.prototype.mousePressEvent = function (func) {
        this.element.mousePressEvent(func);
    };
    BaseElement.prototype.mouseReleaseEvent = function (func) {
        this.element.mouseReleaseEvent(func);
    };
    BaseElement.prototype.setStyleSheet = function (obj) {
        this.element.setStyleSheet(convertStyleSheet_1.default(obj));
    };
    BaseElement.prototype.setParent = function (elem) {
        //console.log("Set parent", this.element, elem.element);
        this.element.setParent(elem.element);
    };
    BaseElement.prototype.del = function () {
        this.element.del();
    };
    BaseElement.prototype.resize = function (width, height) {
        this.element.resize(width, height);
    };
    BaseElement.prototype.move = function (left, top) {
        this.element.move(left, top);
    };
    BaseElement.prototype.minSize = function () {
        return this.element.minimumSizeHint();
    };
    BaseElement.prototype.show = function () {
        this.element.show();
    };
    BaseElement.prototype.close = function () {
        this.element.close();
    };
    BaseElement.prototype.width = function () {
        return this.element.width();
    };
    BaseElement.prototype.height = function () {
        return this.element.height();
    };
    return BaseElement;
}());
exports.BaseElement = BaseElement;
var ImageElement = /** @class */ (function (_super) {
    __extends(ImageElement, _super);
    function ImageElement() {
        var _this = _super.call(this) || this;
        _this.element = new qt.QLabel();
        _this.element.setScaledContents(false);
        _this.pixElement = new qt.QPixmap();
        return _this;
    }
    ImageElement.prototype.setFromData = function (data) {
        this.pixElement.loadFromData(data);
        this.element.setPixmap(this.pixElement);
    };
    ImageElement.prototype.setFromUri = function (uri) {
        this.pixElement.load(uri);
        this.element.setPixmap(this.pixElement);
    };
    ImageElement.prototype.scaleImage = function (width, height, mode) {
        this.element.setAlignment(qt.Alignment.AlignLeft | qt.Alignment.AlignVCenter);
        if (mode == "cover") {
            this.pixElement.scaled(width, height, qt.AspectRatioMode.KeepAspectRatioByExpanding);
        }
        else if (mode == "contain") {
            this.pixElement.scaled(width, height, qt.AspectRatioMode.KeepAspectRatio);
        }
        else if (mode == "stretch") {
            this.pixElement.scaled(width, height, qt.AspectRatioMode.IgnoreAspectRatio);
        }
        else if (mode == "center") {
            this.element.setAlignment(qt.Alignment.AlignCenter);
            this.pixElement.scaled(width, height, qt.AspectRatioMode.KeepAspectRatio);
        }
        else if (mode == "repeat") {
            this.pixElement.scaledTile(width, height);
        }
        this.element.setPixmap(this.pixElement);
        this.element.show();
        this.element.adjustSize();
    };
    ImageElement.prototype.isNull = function () {
        return this.pixElement.isNull();
    };
    return ImageElement;
}(BaseElement));
exports.ImageElement = ImageElement;
var WindowElement = /** @class */ (function (_super) {
    __extends(WindowElement, _super);
    function WindowElement() {
        var _this = _super.call(this) || this;
        _this.element = new qt.QMainWindow();
        return _this;
    }
    WindowElement.prototype.resizeEvent = function (func) {
        this.element.resizeEvent(func);
    };
    WindowElement.prototype.getClosed = function () {
        return this.element.getClosed();
    };
    return WindowElement;
}(BaseElement));
exports.WindowElement = WindowElement;
var ViewElement = /** @class */ (function (_super) {
    __extends(ViewElement, _super);
    function ViewElement() {
        var _this = _super.call(this) || this;
        _this.element = new qt.QWidget();
        return _this;
    }
    return ViewElement;
}(BaseElement));
exports.ViewElement = ViewElement;
var PickerElement = /** @class */ (function (_super) {
    __extends(PickerElement, _super);
    function PickerElement() {
        var _this = _super.call(this) || this;
        _this.element = new qt.QComboBox();
        return _this;
    }
    PickerElement.prototype.activatedEvent = function (func) {
        this.element.activatedEvent(func);
    };
    PickerElement.prototype.addItem = function (label) {
        this.element.addItem(label);
    };
    PickerElement.prototype.removeItem = function (index) {
        this.element.removeItem(index);
    };
    PickerElement.prototype.insertItem = function (index, label) {
        this.element.insertItem(index, label);
    };
    PickerElement.prototype.setCurrentText = function (label) {
        this.element.setCurrentText(label);
    };
    PickerElement.prototype.currentIndex = function () {
        return this.element.currentIndex();
    };
    return PickerElement;
}(BaseElement));
exports.PickerElement = PickerElement;
var AppElement = /** @class */ (function () {
    function AppElement() {
        this.element = new qt.QApplication();
    }
    AppElement.prototype.runLoop = function () {
        this.element.sendPostedEvents();
        this.element.processEvents();
    };
    return AppElement;
}());
exports.AppElement = AppElement;
var TextElement = /** @class */ (function (_super) {
    __extends(TextElement, _super);
    function TextElement() {
        var _this = _super.call(this) || this;
        _this.element = new qt.QLabel();
        return _this;
    }
    TextElement.prototype.setText = function (text) {
        this.element.setText(text);
    };
    return TextElement;
}(BaseElement));
exports.TextElement = TextElement;
var TextInputElement = /** @class */ (function (_super) {
    __extends(TextInputElement, _super);
    function TextInputElement(multi) {
        var _this = _super.call(this) || this;
        _this.element = multi ? new qt.QPlainTextEdit() : new qt.QLineEdit();
        return _this;
    }
    TextInputElement.prototype.textChangedEvent = function (func) {
        this.element.textChangedEvent(func);
    };
    TextInputElement.prototype.setText = function (text) {
        this.element.setText(text);
    };
    return TextInputElement;
}(BaseElement));
exports.TextInputElement = TextInputElement;
var ButtonElement = /** @class */ (function (_super) {
    __extends(ButtonElement, _super);
    function ButtonElement() {
        var _this = _super.call(this) || this;
        _this.element = new qt.QPushButton();
        return _this;
    }
    ButtonElement.prototype.buttonReleasedEvent = function (func) {
        this.element.buttonReleasedEvent(func);
    };
    ButtonElement.prototype.setText = function (text) {
        this.element.setText(text);
    };
    return ButtonElement;
}(BaseElement));
exports.ButtonElement = ButtonElement;
